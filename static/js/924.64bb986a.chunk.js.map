{"version":3,"file":"static/js/924.64bb986a.chunk.js","mappings":"0RACA,GAAgB,SAAW,0B,SCW3B,EARe,SAACA,GACZ,OACI,gBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAS,UACtC,SAAC,KAAO,CAACC,GAAE,mBAAcH,EAAMI,IAAK,UAAC,gBAAKH,UAAWC,EAAAA,SAAW,SAAEF,EAAMK,YAGpF,ECTA,EAA0B,yBAA1B,EAA6D,yBAA7D,EAAoI,0B,6BCI9HC,GAAcC,EAAAA,EAAAA,GAAU,IACxBC,GAAWC,EAAAA,EAAAA,GAAe,YAehC,EAboB,SAACT,GACjB,OACI,kBAAMU,SAAUV,EAAMW,aAAa,WAC/B,0BACI,SAACC,EAAA,EAAK,CAACC,KAAK,UAAUC,UAAWN,EAAUO,KAAK,OAAOC,YAAY,qBAAqBC,SAAU,CAACC,EAAAA,EAAUZ,QAEjH,0BACI,gDAIhB,EClBA,GAAiB,ECQjB,EANgB,SAACN,GACb,OACI,gBAAKC,UAAWC,EAAAA,QAAU,SAAEF,EAAMmB,SAE1C,ECwBMC,GAAmBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,WAAlBD,CAA+BE,GAExD,EA1BgB,SAACvB,GACb,IAAIwB,EAAUxB,EAAMyB,YAAYD,QAAQE,KAAI,SAACC,EAAGvB,GAAE,OAAK,SAAC,EAAM,CAAUA,GAAIuB,EAAEvB,GAAIC,OAAQsB,EAAEtB,QAAxBD,EAAkC,IAClGwB,EAAW5B,EAAMyB,YAAYG,SAASF,KAAI,SAACG,EAAGzB,GAAE,OAAK,SAAC,EAAO,CAAUe,QAASU,EAAEV,SAAff,EAA0B,IAMjG,OACI,iBAAKH,UAAWC,EAAU,WACtB,iBAAKD,UAAWC,EAAU,WACtB,0BAAK,sCACJsB,MAGL,iBAAKvB,UAAWC,EAAW,WACvB,0BAAK,uCACJ0B,GACD,SAACR,EAAgB,CAACV,SAdX,SAACoB,GAChB9B,EAAM+B,WAAWD,EAASX,QAC9B,SAgBJ,ECvBMa,EAAgB,qGAOjB,OAPiB,8BAClB,WACI,OACI,0BACI,SAAC,GAAO,UAAKC,KAAKjC,SAG9B,KAAC,EAPiB,CAASkC,EAAAA,WAgB/B,GAAeC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAPoB,SAACC,GACrB,MAAO,CACHZ,YAAaY,EAAMZ,YAE3B,GAG6B,CAAEM,WAAAA,EAAAA,IAC3BO,EAAAA,EAFJ,CAGEN,E,kJCrBIO,EAA6B,SAACF,GAChC,MAAO,CACHG,OAAQH,EAAMI,KAAKD,OAE3B,EAEaF,EAAmB,SAACI,GAAe,IACtCC,EAAwB,qGAIzB,OAJyB,8BAC1B,WACI,OAAKV,KAAKjC,MAAMwC,QACT,SAACE,GAAS,UAAKT,KAAKjC,SADI,SAAC,KAAQ,CAACG,GAAI,UAEjD,KAAC,EAJyB,CAAS+B,EAAAA,WAMvC,OAAOE,EAAAA,EAAAA,IAAQG,EAARH,CAAoCO,EAC/C,C","sources":["webpack://social-network/./src/Components/Dialogs/Dialog/Dialog.module.css?884a","Components/Dialogs/Dialog/Dialog.jsx","webpack://social-network/./src/Components/Dialogs/Dialogs.module.css?db5c","Components/Dialogs/DialogsForm.jsx","Components/Dialogs/Message/Message.module.css","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx","Components/HOC/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userName\":\"Dialog_userName__U57bH\"};","import React from \"react\"\nimport { NavLink } from \"react-router-dom\"\nimport s from './Dialog.module.css'\n\nconst Dialog = (props) => {\n    return (\n        <div className={s.dialog + ' ' + s.active}>\n            <NavLink to={`/dialogs/${props.id}`}><div className={s.userName}>{props.dialog}</div></NavLink>\n        </div>\n    )\n}\n\nexport default Dialog","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Dialogs_content__5OmEs\",\"dialogs\":\"Dialogs_dialogs__7Hmvy\",\"userImg\":\"Dialogs_userImg__-yX64\",\"messages\":\"Dialogs_messages__YwRox\",\"active\":\"Dialogs_active__Ugg3u\"};","import React from \"react\"\nimport { Field } from \"redux-form\"\nimport { required, maxLength } from \"../../utilities/validators\"\nimport { FormControlDiv } from \"../Common/FormController/FormControl\"\n\nconst maxLength50 = maxLength(30)\nconst Textarea = FormControlDiv('textarea')\n\nconst DialogsForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field name='message' component={Textarea} type='text' placeholder='Enter your message' validate={[required, maxLength50]} />\n            </div>\n            <div>\n                <button>Add Message</button>\n            </div>\n        </form>\n    )\n}\n\nexport default DialogsForm","// extracted by mini-css-extract-plugin\nexport default {};","import React from \"react\";\nimport s from './Message.module.css';\n\nconst Message = (props) => {\n    return (\n        <div className={s.message}>{props.message}</div>\n    )\n}\n\nexport default Message","import React from \"react\";\nimport { reduxForm } from \"redux-form\";\nimport Dialog from \"./Dialog/Dialog\";\nimport s from './Dialogs.module.css';\nimport DialogsForm from \"./DialogsForm\";\nimport Message from \"./Message/Message\";\n\nconst Dialogs = (props) => {\n    let dialogs = props.dialogsPage.dialogs.map((d, id) => <Dialog key={id} id={d.id} dialog={d.dialog} />)\n    let messages = props.dialogsPage.messages.map((m, id) => <Message key={id} message={m.message} />)\n\n    const addMessage = (formData) => {\n        props.addMessage(formData.message)\n    }\n\n    return (\n        <div className={s.content}>\n            <div className={s.dialogs}>\n                <div><h2>Dialogs</h2></div>\n                {dialogs}\n            </div>\n\n            <div className={s.messages}>\n                <div><h2>Messages</h2></div>\n                {messages}\n                <DialogsReduxForm onSubmit={addMessage} />\n            </div>\n        </div>\n    )\n}\n\nconst DialogsReduxForm = reduxForm({ form: 'dialogs' })(DialogsForm)\n\nexport default Dialogs","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from \"../HOC/withAuthRedirect\";\nimport { addMessage } from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nclass DialogsContainer extends React.Component {\n    render() {\n        return (\n            <div>\n                <Dialogs {...this.props} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, { addMessage }),\n    withAuthRedirect\n)(DialogsContainer)\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\nconst mapStateToPropsForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n    class WrapperRedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Navigate to={'/login'} />\n            return <Component {...this.props} />\n        }\n    }\n    return connect(mapStateToPropsForRedirect)(WrapperRedirectComponent)\n}"],"names":["props","className","s","to","id","dialog","maxLength50","maxLength","Textarea","FormControlDiv","onSubmit","handleSubmit","Field","name","component","type","placeholder","validate","required","message","DialogsReduxForm","reduxForm","form","DialogsForm","dialogs","dialogsPage","map","d","messages","m","formData","addMessage","DialogsContainer","this","React","compose","connect","state","withAuthRedirect","mapStateToPropsForRedirect","isAuth","auth","Component","WrapperRedirectComponent"],"sourceRoot":""}