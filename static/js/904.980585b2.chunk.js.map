{"version":3,"file":"static/js/904.980585b2.chunk.js","mappings":"gPASMA,EAA6B,SAACC,GAChC,MAAO,CACHC,OAAQD,EAAME,KAAKD,OAE3B,EAEaE,EAAmB,SAACC,GAAe,IACtCC,EAAwB,qGAIzB,OAJyB,8BAC1B,WACI,OAAKC,KAAKC,MAAMN,QACT,SAACG,GAAS,UAAKE,KAAKC,SADI,SAAC,KAAQ,CAACC,GAAI,UAEjD,KAAC,EAJyB,CAASC,EAAAA,WAMvC,OAAOC,EAAAA,EAAAA,IAAQX,EAARW,CAAoCL,EAC/C,C,uMCbA,EARa,SAACE,GACV,OACI,yBACKA,EAAMI,MAGnB,E,6BCHMC,GAAcC,EAAAA,EAAAA,GAAU,IACxBC,GAAWC,EAAAA,EAAAA,GAAY,YAe7B,EAboB,SAACR,GACjB,OACI,kBAAMS,SAAUT,EAAMU,aAAa,WAC/B,0BACI,SAACC,EAAA,EAAK,CAACC,KAAK,OAAOC,UAAWN,EAAUO,KAAK,OAAOC,SAAU,CAACC,EAAAA,EAAUX,QAE7E,0BACI,6CAIhB,E,SCZMY,EAAUf,EAAAA,MAAW,SAACF,GACxB,IAAII,GACA,OAAIJ,EAAMkB,OACLC,UACAC,KAAI,SAACC,EAAGC,GAAE,OAAK,SAAC,EAAI,CAAUlB,KAAMiB,EAAEE,SAAZD,EAAuB,IAI1D,OACI,iBAAKE,MAAO,CAAE,OAAU,QAAS,WAC7B,sCACA,yBACKpB,KAEL,0BACI,SAACqB,EAAa,CAAChB,SAVZ,SAACiB,GACZ1B,EAAM2B,QAAQD,EAAStB,KAC3B,QAYJ,IAgBIqB,GAAgBG,EAAAA,EAAAA,GAAU,CAAEC,KAAM,QAAlBD,CAA4BE,GAEhD,GAAe3B,EAAAA,EAAAA,KAhBS,SAACV,GACrB,MAAO,CACHyB,MAAOzB,EAAMsC,YAAYb,MAEjC,IAE2B,SAACc,GACxB,MAAO,CACHL,QAAS,SAACvB,GACN4B,GAASC,EAAAA,EAAAA,IAAqB7B,GAClC,EAER,GAIA,CAA4Da,G,UC3C5D,EAA0B,6B,SC+B1B,EA9B+B,SAACjB,GAC5B,OAA8BkC,EAAAA,EAAAA,WAAS,GAAM,eAAxCC,EAAQ,KAAEC,EAAW,KAC1B,GAA0BF,EAAAA,EAAAA,UAASlC,EAAMqC,QAAO,eAA3CA,EAAM,KAAEC,EAAS,MAEtBC,EAAAA,EAAAA,YAAU,WACND,EAAUtC,EAAMqC,OACpB,GAAG,CAACrC,EAAMqC,SAeV,OACI,yBACMF,GAEI,0BAAK,kBAAOK,MAAOH,EAAQI,SARtB,SAACC,GAChBJ,EAAUI,EAAMC,cAAcH,MAClC,EAM+DI,OAbpC,WACvBR,GAAY,GACZpC,EAAM6C,aAAaR,EACvB,EAU2FS,WAAW,OADxF,0BAAK,iBAAMC,cAhBA,WACrBX,GAAY,EAChB,EAcyD,SAAEpC,EAAMqC,QAAU,iBAI/E,EC1BMW,EAAW,qGAoBZ,OApBY,8BACb,WACI,OAAKjD,KAAKC,MAAMiD,SAIZ,iBAAKzB,MAAO,CAAE,OAAU,QAAS,WAC7B,0BACI,gBAAK0B,IAAI,aAAaC,IAAKpD,KAAKC,MAAMiD,QAAQG,OAAOC,MAAOC,UAAWC,OAE3E,0BACI,iCACI,wCAAc,0BAAOxD,KAAKC,MAAMiD,QAAQO,cACxC,yCAAe,0BAAOzD,KAAKC,MAAMiD,QAAQQ,eACzC,uCAAa,0BAAO1D,KAAKC,MAAMiD,QAAQS,aACvC,SAACC,EAAsB,CAACd,aAAc9C,KAAKC,MAAM6C,aAAcR,OAAQtC,KAAKC,MAAMqC,kBAZvF,SAACuB,EAAA,EAAS,GAiBzB,KAAC,EApBY,CAAS1D,EAAAA,WAuB1B,ICdA,EATgB,SAACF,GACb,OACI,4BACI,SAAC,GAAW,UAAKA,KACjB,SAAC6D,EAAgB,MAG7B,ECHMC,EAAgB,qGAejB,OAfiB,yCAClB,WACI,IAAIC,EAAShE,KAAKC,MAAMgE,OAAOC,OAAOP,OACjCK,IACDA,EAAShE,KAAKC,MAAMkE,cAExBnE,KAAKC,MAAMmE,WAAWJ,GACtBhE,KAAKC,MAAMoE,UAAUL,EACzB,GAAC,oBACD,WACI,OACI,0BACI,SAAC,GAAO,UAAKhE,KAAKC,SAG9B,KAAC,EAfiB,CAASE,EAAAA,WAyC/B,GAAemE,EAAAA,EAAAA,KACXlE,EAAAA,EAAAA,KAxBoB,SAACV,GACrB,MAAO,CACHwD,QAASxD,EAAMsC,YAAYkB,QAC3BZ,OAAQ5C,EAAMsC,YAAYM,OAC1B6B,aAAczE,EAAME,KAAK2B,GACzB5B,OAAQD,EAAME,KAAKD,OAE3B,IAE2B,SAACsC,GACxB,MAAO,CACHmC,WAAY,SAACJ,GACT/B,GAASmC,EAAAA,EAAAA,IAAWJ,GACxB,EACAK,UAAW,SAACL,GACR/B,GAASoC,EAAAA,EAAAA,IAAUL,GACvB,EACAlB,aAAc,SAACR,GACXL,GAASa,EAAAA,EAAAA,IAAaR,GAC1B,EAER,IAIIzC,EAAAA,EACA0E,EAAAA,EAHJ,CAIER,E","sources":["Components/HOC/withAuthRedirect.js","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPostsForm.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","webpack://social-network/./src/Components/Profile/ProfileInfo/ProfileInfo.module.css?23b5","Components/Profile/ProfileInfo/ProfileStatusWithHook.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\n\n// логику определили в контейнерной компоненте - WrapperRedirectComponent\n// когда к нам будет поступать целевая компонента - Component\n// HOC withRedirect вернет нам контейнерную компоненту с общим поведением для целевых компонент Component\n\nconst mapStateToPropsForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n    class WrapperRedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Navigate to={'/login'} />\n            return <Component {...this.props} />\n        }\n    }\n    return connect(mapStateToPropsForRedirect)(WrapperRedirectComponent)\n}","import React from \"react\";\n\nconst Post = (props) => {\n    return (\n        <div>\n            {props.post}\n        </div>\n    )\n} \n\nexport default Post","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport { maxLength, required } from \"../../../utilities/validators\";\nimport { FormControl } from \"../../Common/FormController/FormControl\";\n\nconst maxLength30 = maxLength(30)\nconst Textarea = FormControl('textarea')\n\nconst MyPostsForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field name='post' component={Textarea} type='text' validate={[required, maxLength30]} />\n            </div>\n            <div>\n                <button>Add Post</button>\n            </div>\n        </form>\n    )\n}\n\nexport default MyPostsForm","import React from \"react\"\nimport Post from \"./Post/Post\"\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\"\nimport { connect } from \"react-redux\"\nimport MyPostsForm from \"./MyPostsForm\"\nimport { reduxForm } from \"redux-form\"\n\nconst MyPosts = React.memo((props) => {\n    let post =\n        [...props.posts]\n            .reverse()\n            .map((m, id) => <Post key={id} post={m.message} />)\n    let onSubmit = (formData) => {\n        props.addPost(formData.post)\n    }\n    return (\n        <div style={{ 'margin': '10px' }}>\n            <h1>My posts</h1>\n            <div>\n                {post}\n            </div>\n            <div>\n                <PostReduxForm onSubmit={onSubmit} />\n            </div>\n        </div>\n    )\n})\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (post) => {\n            dispatch(addPostActionCreator(post))\n        }\n    }\n}\n\nlet PostReduxForm = reduxForm({ form: 'post' })(MyPostsForm)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts)","// extracted by mini-css-extract-plugin\nexport default {\"userImg\":\"ProfileInfo_userImg__NX5rV\"};","import React, { useEffect, useState } from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false)\n    let [status, setStatus] = useState(props.status)\n\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status])\n\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n    const changeText = (event) => {\n        setStatus(event.currentTarget.value)\n    }\n\n    return (\n        <div>\n            {!editMode\n                ? <div><span onDoubleClick={activateEditMode}>{props.status || 'No status'}</span></div>\n                : <div><input value={status} onChange={changeText} onBlur={deactivateEditMode} autoFocus={true} /></div>}\n        </div>\n    )\n}\n\nexport default ProfileStatusWithHooks","import React from \"react\"\nimport Preloader from \"../../Common/Preloader/Preloader\"\nimport s from './ProfileInfo.module.css'\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHook\"\nclass ProfileInfo extends React.Component {\n    render() {\n        if (!this.props.profile) {\n            return <Preloader />\n        }\n        return (\n            <div style={{ 'margin': '10px' }}>\n                <div>\n                    <img alt=\"userAvatar\" src={this.props.profile.photos.small} className={s.userImg} />\n                </div>\n                <div>\n                    <>\n                        <div>aboutMe: <span>{this.props.profile.aboutMe}</span></div>\n                        <div>fullName: <span>{this.props.profile.fullName}</span></div>\n                        <div>userID: <span>{this.props.profile.userId}</span></div>\n                        <ProfileStatusWithHooks updateStatus={this.props.updateStatus} status={this.props.status} />\n                    </>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ProfileInfo","import React from \"react\"\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\"\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\"\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo {...props} />\n            <MyPostsContainer />\n        </div>\n    )\n}\n\nexport default Profile","import React from \"react\";\nimport { connect } from \"react-redux\"\nimport { withRouter } from \"../HOC/withRouter\";\nimport { getStatus, setProfile, updateStatus } from \"../../redux/profile-reducer\";\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from \"../HOC/withAuthRedirect\";\nimport Profile from \"./Profile\";\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let userID = this.props.router.params.userId\n        if (!userID) {\n            userID = this.props.authorizedID\n        }\n        this.props.setProfile(userID)\n        this.props.getStatus(userID)\n    }\n    render() {\n        return (\n            <div>\n                <Profile {...this.props} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedID: state.auth.id,\n        isAuth: state.auth.isAuth,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setProfile: (userID) => {\n            dispatch(setProfile(userID))\n        },\n        getStatus: (userID) => {\n            dispatch(getStatus(userID))\n        },\n        updateStatus: (status) => {\n            dispatch(updateStatus(status))\n        }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect,\n    withRouter,\n)(ProfileContainer)"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","WrapperRedirectComponent","this","props","to","React","connect","post","maxLength30","maxLength","Textarea","FormControl","onSubmit","handleSubmit","Field","name","component","type","validate","required","MyPosts","posts","reverse","map","m","id","message","style","PostReduxForm","formData","addPost","reduxForm","form","MyPostsForm","profilePage","dispatch","addPostActionCreator","useState","editMode","setEditMode","status","setStatus","useEffect","value","onChange","event","currentTarget","onBlur","updateStatus","autoFocus","onDoubleClick","ProfileInfo","profile","alt","src","photos","small","className","s","aboutMe","fullName","userId","ProfileStatusWithHook","Preloader","MyPostsContainer","ProfileContainer","userID","router","params","authorizedID","setProfile","getStatus","compose","withRouter"],"sourceRoot":""}