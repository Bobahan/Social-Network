{"version":3,"file":"static/js/212.3bf348e1.chunk.js","mappings":"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","sources":["Components/HOC/withAuthRedirect.js","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPostsForm.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","webpack://social-network/./src/Components/Profile/ProfileInfo/Info/ProfileInfo.module.css?7f33","Components/Profile/ProfileInfo/Contacts/ProfileContacts.jsx","Components/Profile/ProfileInfo/Data/ProfileData.jsx","Components/Profile/ProfileInfo/Status/ProfileStatusWithHook.jsx","Components/Profile/ProfileInfo/Data/ProfileDataForm.jsx","Components/Profile/ProfileInfo/Info/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\nconst mapStateToPropsForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n    class WrapperRedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Navigate to={'/login'} />\n            return <Component {...this.props} />\n        }\n    }\n    return connect(mapStateToPropsForRedirect)(WrapperRedirectComponent)\n}","import React from \"react\";\n\nconst Post = (props) => {\n    return (\n        <div>\n            {props.post}\n        </div>\n    )\n} \n\nexport default Post","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport { maxLength, required } from \"../../../utilities/validators\";\nimport { FormControlDiv } from \"../../Common/FormController/FormControl\";\n\nconst maxLength30 = maxLength(30)\nconst Textarea = FormControlDiv('textarea')\n\nconst MyPostsForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field name='post' component={Textarea} type='text' validate={[required, maxLength30]} />\n            </div>\n            <div>\n                <button>Add Post</button>\n            </div>\n        </form>\n    )\n}\n\nexport default MyPostsForm","import React from \"react\"\nimport Post from \"./Post/Post\"\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\"\nimport { connect } from \"react-redux\"\nimport MyPostsForm from \"./MyPostsForm\"\nimport { reduxForm } from \"redux-form\"\n\nconst MyPosts = React.memo((props) => {\n    let post =\n        [...props.posts]\n            .reverse()\n            .map((m, id) => <Post key={id} post={m.message} />)\n    let onSubmit = (formData) => {\n        props.addPost(formData.post)\n    }\n    return (\n        <div style={{ 'margin': '10px' }}>\n            <h1>My posts</h1>\n            <div>\n                {post}\n            </div>\n            <div>\n                <PostReduxForm onSubmit={onSubmit} />\n            </div>\n        </div>\n    )\n})\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (post) => {\n            dispatch(addPostActionCreator(post))\n        }\n    }\n}\n\nlet PostReduxForm = reduxForm({ form: 'post' })(MyPostsForm)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts)","// extracted by mini-css-extract-plugin\nexport default {\"userImg\":\"ProfileInfo_userImg__nkiUs\",\"inputFile\":\"ProfileInfo_inputFile__FFXjU\"};","import React from \"react\"\n\nconst Contacts = ({ contactTitle, contactValue }) => {\n    return (\n        <ul style={{ 'margin': '0' }}>\n            <li>{contactTitle}: <span>{contactValue}</span> </li>\n        </ul>\n    )\n}\n\nexport default Contacts","import React from \"react\";\nimport Contacts from \"../Contacts/ProfileContacts\";\n\nconst ProfileData = (props) => {\n    return (\n        <div style={{ 'marginTop': '10px' }}>\n            {props.isOwner && <div><button onClick={props.activateEditMode}>Edit</button></div>}\n            <div><span style={{ 'fontWeight': '700', 'borderBottom': '1px solid black' }}>AboutMe: </span><span style={{ 'alignSelf': 'center' }}>{props.profile.aboutMe}</span></div>\n            <div><span style={{ 'fontWeight': '700', 'borderRadius': '5%' }}>FullName:</span> <span style={{ 'alignSelf': 'center' }}>{props.profile.fullName}</span></div>\n            <div><span style={{ 'fontWeight': '700', 'borderRadius': '5%' }}>UserID:</span> <span>{props.profile.userId}</span></div>\n            <div><span style={{ 'fontWeight': '700', 'borderRadius': '5%' }}>Looking For A Job Description:</span> <span style={{ 'alignSelf': 'center' }}>{props.profile.lookingForAJobDescription}</span></div>\n            {/* <div><span style={{ 'fontWeight': '700', 'borderRadius': '5%' }}>Looking for a job:</span> <span>{!props.profile.lookingForAJob ? 'yes' : 'no'}</span></div> */}\n            <div><span style={{ 'fontWeight': '700', 'borderRadius': '5%' }}>Contacts:</span> <span>{Object.keys(props.profile.contacts).map(key => {\n                return <Contacts key={key} contactTitle={key} contactValue={props.profile.contacts[key]} />\n            })}</span></div>\n        </div>\n    )\n}\n\nexport default ProfileData","import React, { useEffect, useState } from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false)\n    let [status, setStatus] = useState(props.status)\n\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status])\n\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n    const changeText = (event) => {\n        setStatus(event.currentTarget.value)\n    }\n\n    return (\n        <div>\n            {!editMode\n                ? <div><span style={{ 'fontWeight': '700' }}>Status: </span><span onDoubleClick={activateEditMode}>{props.status || 'No status'}</span></div>\n                : <div><input value={status} onChange={changeText} onBlur={deactivateEditMode} autoFocus={true} /></div>}\n        </div>\n    )\n}\n\nexport default ProfileStatusWithHooks","import React from \"react\"\nimport { Field, reduxForm } from \"redux-form\"\nimport { FormControlSpan } from \"../../../Common/FormController/FormControl\"\nimport Contacts from \"../Contacts/ProfileContacts\"\nimport styles from '../../../Common/FormController/FormControl.module.css'\n\nconst Input = FormControlSpan('input')\nconst Textarea = FormControlSpan('textarea')\n\nconst ProfileDataForm = ({ handleSubmit, error, profile }) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <div style={{ 'marginTop': '10px' }}><button>Save</button></div>\n            <div style={{ 'display': 'flex' }}>\n                <div style={{ 'fontWeight': '700', 'borderBottom': '1px solid black', 'alignSelf': 'center' }}>AboutMe: </div>\n                <Field name=\"aboutMe\" component={Textarea} type=\"text\" placeholder=\"About Me\" style={{ 'marginLeft': '10px' }} />\n            </div>\n\n            <div style={{ 'display': 'flex' }}>\n                <div style={{ 'fontWeight': '700', 'borderRadius': '5%', 'alignSelf': 'center' }}>FullName:</div>\n                <Field name=\"fullName\" component={Input} type=\"text\" placeholder=\"Full Name\" style={{ 'marginLeft': '10px' }} />\n            </div>\n\n            <div style={{ 'display': 'flex' }}>\n                <div style={{ 'fontWeight': '700', 'borderRadius': '5%', 'alignSelf': 'center' }}>UserID:</div>\n                <span style={{ 'marginLeft': '5px' }}>{profile.userId}</span>\n            </div>\n\n            <div style={{ 'display': 'flex' }}>\n                <span style={{ 'fontWeight': '700', 'borderRadius': '5%', 'alignSelf': 'center' }}>Looking For A Job Description:</span>\n                <Field name=\"lookingForAJobDescription\" component={Input} type=\"text\" placeholder=\"Yes / No\" style={{ 'marginLeft': '10px' }} />\n            </div>\n\n            <div><span style={{ 'fontWeight': '700', 'borderRadius': '5%' }}>Contacts:</span> <span>{Object.keys(profile.contacts).map(key => {\n                return (\n                    <div key={key}>\n                        <b>{key}: <Field name={`contacts.` + key} placeholder={key} component={Input} type=\"text\" /></b>\n                    </div>\n                )\n            })}</span></div>\n            {error && <div className={styles.formControlSummaryError} style={{ 'margin': '10px 10px' }}>{error}</div>}\n        </form>\n    )\n}\n\nconst ProfileDataReduxForm = reduxForm({ form: 'profile' })(ProfileDataForm)\nexport default ProfileDataReduxForm\n\n//  <Contacts key={key} contactTitle={key} contactValue={props.profile.contacts[key]} />","import React, { useState } from \"react\"\nimport Preloader from \"../../../Common/Preloader/Preloader\"\nimport s from './ProfileInfo.module.css'\nimport userPhoto from '../../../../assets/userImg.png'\nimport ProfileData from \"../Data/ProfileData\"\nimport ProfileStatusWithHooks from \"../Status/ProfileStatusWithHook\"\nimport ProfileDataReduxForm from \"../Data/ProfileDataForm\"\n\nconst ProfileInfo = (props) => {\n\n    const [editMode, setEditMode] = useState(false)\n\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n\n    const onSelectedPhoto = (event) => {\n        if (event.target.files.length) {\n            props.updatePhoto(event.target.files[0])\n        }\n    }\n\n    const onSubmit = (formData) => {\n        props.saveProfile(formData)\n        setEditMode(false);\n    };\n\n    if (!props.profile) {\n        return <Preloader />\n    }\n    return (\n        <div style={{ 'margin': '10px' }}>\n            <div>\n                <img alt=\"userPhoto\" src={props.profile.photos.large || userPhoto} className={s.userImg} />\n            </div>\n            <label className={s.inputFile}>\n                {props.isOwner ? <input type={'file'} name='file' onChange={(event) => { onSelectedPhoto(event) }} /> : null}\n                <span>Выберите файл</span>\n            </label>\n            {editMode\n                ? <ProfileDataReduxForm initialValues={props.profile} {...props} onSubmit={onSubmit} />\n                : <ProfileData profile={props.profile} {...props} activateEditMode={activateEditMode} />}\n            <ProfileStatusWithHooks updateStatus={props.updateStatus} status={props.status} />\n        </div>\n    )\n}\n\nexport default ProfileInfo","import React from \"react\"\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\"\nimport ProfileInfo from \"./ProfileInfo/Info/ProfileInfo\"\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo profile={props.profile} {...props} isOwner={props.isOwner} updatePhoto={props.updatePhoto} saveProfile={props.saveProfile} />\n            <MyPostsContainer />\n        </div>\n    )\n}\n\nexport default Profile","import React from \"react\";\nimport { connect } from \"react-redux\"\nimport { withRouter } from \"../HOC/withRouter\";\nimport { getStatus, saveProfile, setProfile, updatePhoto, updateStatus } from \"../../redux/profile-reducer\";\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from \"../HOC/withAuthRedirect\";\nimport Profile from \"./Profile\";\n\nclass ProfileContainer extends React.Component {\n    updateProfile() {\n        let userID = this.props.router.params.userId\n        if (!userID) {\n            userID = this.props.authorizedID\n        }\n        this.props.setProfile(userID)\n        this.props.getStatus(userID)\n    }\n    componentDidMount() {\n        this.updateProfile()\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.router.params.userId !== this.props.router.params.userId) {\n            this.updateProfile()\n        }\n    }\n    render() {\n        return (\n            <div>\n                <Profile profile={this.props.profile} isOwner={!this.props.router.params.userId} updatePhoto={this.props.updatePhoto} saveProfile={this.props.saveProfile} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedID: state.auth.id,\n        isAuth: state.auth.isAuth,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setProfile: (userID) => {\n            dispatch(setProfile(userID))\n        },\n        getStatus: (userID) => {\n            dispatch(getStatus(userID))\n        },\n        updateStatus: (status) => {\n            dispatch(updateStatus(status))\n        },\n        updatePhoto: (photo) => {\n            dispatch(updatePhoto(photo))\n        },\n        saveProfile: (profile) => {\n            dispatch(saveProfile(profile))\n        }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect,\n    withRouter,\n)(ProfileContainer)"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","WrapperRedirectComponent","this","props","to","React","connect","post","maxLength30","maxLength","Textarea","FormControlDiv","onSubmit","handleSubmit","Field","name","component","type","validate","required","MyPosts","posts","reverse","map","m","id","message","style","PostReduxForm","formData","addPost","reduxForm","form","MyPostsForm","profilePage","dispatch","addPostActionCreator","contactTitle","contactValue","isOwner","onClick","activateEditMode","profile","aboutMe","fullName","userId","lookingForAJobDescription","Object","keys","contacts","key","useState","editMode","setEditMode","status","setStatus","useEffect","value","onChange","event","currentTarget","onBlur","updateStatus","autoFocus","onDoubleClick","Input","FormControlSpan","error","placeholder","className","styles","alt","src","photos","large","userPhoto","s","target","files","length","updatePhoto","onSelectedPhoto","initialValues","saveProfile","ProfileStatusWithHook","Preloader","MyPostsContainer","ProfileContainer","userID","router","params","authorizedID","setProfile","getStatus","updateProfile","prevProps","compose","photo","withRouter"],"sourceRoot":""}